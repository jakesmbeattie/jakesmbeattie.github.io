{"version":3,"sources":["static/apple-wallet.png","static/x-icon.png","components/Barcode.tsx","pages/Ticket.tsx","pages/TicketInput.tsx","App.tsx","serviceWorkerRegistration.js","index.tsx"],"names":["module","exports","generateText","length","str","i","Math","random","Barcode","canvas","state","setState","useState","useEffect","bwipjs","toCanvas","bcid","text","scale","setTimeout","err","console","error","React","createElement","style","display","className","id","Ticket","props","dateStr","gameDate","toString","slice","margin","Header","marginBottom","color","background","size","Button","padding","paddingTop","compact","basic","icon","onClick","width","height","src","xIcon","team","fontSize","fontWeight","marginTop","paddingBottom","gameTime","justifyContent","section","row","seat","textAlign","Image","appleWallet","TicketInput","Container","Input","focus","value","ticket","placeholder","onChange","DatePicker","selected","onDateChange","App","clicked","Date","now","onExitTicket","clickable","date","e","data","log","JSON","stringify","onClickGenerate","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.86af9ef6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/apple-wallet.fef8718c.png\";","module.exports = __webpack_public_path__ + \"static/media/x-icon.4f4bf934.png\";","import React, { useState, useEffect } from \"react\";\nimport bwipjs from \"bwip-js\";\nimport \"./Barcode.css\";\n\nconst TEXT_LEN = 255;\n\nconst generateText = (length: number): string => {\n  let str: string = \"\";\n  for (let i = 0; i < length; i++) {\n    str += Math.random() > 0.5 ? \"1\" : \"0\";\n  }\n  return str;\n};\n\nconst Barcode = () => {\n  let canvas;\n  const [state, setState] = useState({});\n  useEffect(() => {\n    try {\n      canvas = bwipjs.toCanvas(\"barcodeCanvas\", {\n        bcid: \"pdf417\",\n        text: generateText(TEXT_LEN),\n        scale: 2,\n      });\n      setTimeout(() => setState({ ...state }), 5000);\n    } catch (err) {\n      console.error(\"Shitted while trying to do: \" + err);\n    }\n  }, [state]);\n\n  return (\n    <div style={{ display: \"inline-flex\" }}>\n      <div className=\"child\"></div>\n      <div className=\"parent\"></div>\n      <canvas className=\"barcode\" id=\"barcodeCanvas\" />\n    </div>\n  );\n};\n\nexport default Barcode;\n","import React from \"react\";\nimport { Button, Image, Header } from \"semantic-ui-react\";\nimport Barcode from \"../components/Barcode\";\nimport appleWallet from \"../static/apple-wallet.png\";\nimport xIcon from \"../static/x-icon.png\";\nimport \"./Ticket.css\";\n\ninterface TicketProps {\n  onClick(): void;\n  team: string;\n  gameTime: string;\n  gameDate: Date;\n  section: string;\n  row: number;\n  seat: number;\n}\n\nfunction calcGateNumber(section: string): string {\n  if (section === \"BOS\") return \"36\";\n  if (section === \"BON\") return \"34\";\n  else return section.slice(0, 2);\n}\n\nconst Ticket = (props: TicketProps) => {\n  const dateStr =\n    props.gameDate.toString().slice(0, 3) +\n    \",\" +\n    props.gameDate.toString().slice(3, 10);\n  return (\n    <div style={{ margin: \"0px\" }}>\n      <Header\n        style={{\n          marginBottom: \"0px\",\n          color: \"white\",\n          background: \"rgba(32, 38, 44)\",\n        }}\n        size=\"small\"\n      >\n        <div style={{ display: \"flex\" }}>\n          <Button\n            style={{ display: \"inline\", padding: \"10px\", paddingTop: \"10px\" }}\n            compact\n            basic\n            icon\n            onClick={props.onClick}\n          >\n            <img style={{ width: \"15px\", height: \"15px\" }} src={xIcon} />\n          </Button>\n          <div style={{ display: \"block\" }}>\n            <p style={{ marginBottom: \"0px\" }}>Football vs {props.team}</p>\n            <p\n              style={{\n                fontSize: \"smaller\",\n                fontWeight: \"lighter\",\n                marginTop: \"-5px\",\n                paddingBottom: \"5px\",\n              }}\n            >\n              <small>\n                {dateStr}, {props.gameTime} - Ohio Stadium\n              </small>\n            </p>\n          </div>\n        </div>\n      </Header>\n      <div className=\"image-container\">\n        <div className=\"background-color\">\n          <div>\n            <div className=\"student-text\">\n              <strong>Ohio State Student Tickets</strong>\n            </div>\n            <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n              <div className=\"seat-info\">\n                <p>SEC</p>\n                <p className=\"seat-number\">{props.section}</p>\n              </div>\n              <div className=\"seat-info\">\n                <p>ROW</p>\n                <p className=\"seat-number\">{props.row}</p>\n              </div>\n              <div className=\"seat-info\">\n                <p>SEAT</p>\n                <p className=\"seat-number\">{props.seat}</p>\n              </div>\n            </div>\n          </div>\n          <div className=\"barcode-container\" style={{ textAlign: \"center\" }}>\n            <Barcode />\n            <p className=\"screenshot-text\">Screenshots won't get you in.</p>\n          </div>\n          <div>\n            <Image className=\"apple-container\" src={appleWallet} size=\"small\" />\n          </div>\n\n          <div className=\"gate-container\">\n            ENTER GATE {calcGateNumber(props.section)}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Ticket;\n","import React from \"react\";\nimport { Input, Button, Container } from \"semantic-ui-react\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport \"./TicketInput.css\";\n\ninterface InputProps {\n  clickable: boolean\n  onChange(e: any, data: object): void;\n  gameDate: Date;\n  onDateChange(date: Date): void;\n  onClick(): void;\n  ticket: any\n}\n\nconst TicketInput = (props: InputProps) => {\n  return (\n    <Container>\n      <Input focus id=\"team\" value={props.ticket.team} placeholder=\"Team\" onChange={props.onChange} />\n      <br />\n      <Input focus id=\"gameTime\" value={props.ticket.gameTime} placeholder=\"Time\" onChange={props.onChange} />\n      <br />\n      <DatePicker selected={props.gameDate} value={props.ticket.gameDate} onChange={props.onDateChange} />\n      <br />\n      <Input\n        focus\n        id=\"section\"\n        value={props.ticket.section}\n        placeholder=\"Seat Section\"\n        onChange={props.onChange}\n      />\n      <br />\n      <Input focus id=\"row\" placeholder=\"Seat Row\" value={props.ticket.row} onChange={props.onChange} />\n      <br />\n      <Input\n        focus\n        id=\"seat\"\n        placeholder=\"Seat Number\"\n        value={props.ticket.seat}\n        onChange={props.onChange}\n      />\n      <br />\n      <Button onClick={props.onClick}>Generate</Button>\n    </Container>\n  );\n};\n\nexport default TicketInput;\n","import React, { useState } from \"react\";\nimport { TicketInput, Ticket } from \"./pages/index\";\nimport \"./App.css\";\ninterface InputFieldData {\n  focus: boolean;\n  placeholder: string;\n  type: string;\n  value: string;\n  id: string;\n}\n\ntype AppState = {\n  clicked: boolean;\n  team: string | null;\n  gameTime: string | null;\n  gameDate: Date;\n  section: string | null;\n  row: number | null;\n  seat: number | null;\n}\n\n\nconst App = () => {\n  const [state, setState] = useState<AppState>({\n    clicked: false,\n    team: null,\n    gameTime: null,\n    gameDate: new Date(Date.now()),\n    section: null,\n    row: null,\n    seat: null,\n  });\n\n  const onChange = (e: any, data: InputFieldData) => {\n    setState({\n      ...state,\n      [data.id]: data.value,\n    });\n    console.log(`Updated ${data.id} ${JSON.stringify(data)}`);\n  };\n\n  const onDateChange = (date: Date) => setState({ ...state, gameDate: date });  \n\n  // render Input\n  const onExitTicket = () =>\n    setState({\n      ...state,\n      clicked: false,\n    });\n\n  // render ticket\n  const onClickGenerate = () => {\n    if (state.team && state.gameTime && state.gameDate && state.section && state.row && state.seat) {\n      setState({\n        ...state,\n        clicked: true,\n      });\n    }\n  };\n  \n  return (\n    <div>\n      {state.clicked && state.team && state.gameTime && state.gameDate && state.section && state.row && state.seat ? (\n        <Ticket\n          onClick={onExitTicket}\n          team={state.team}\n          gameTime={state.gameTime}\n          gameDate={state.gameDate}\n          section={state.section}\n          row={state.row}\n          seat={state.seat}\n        />\n      ) : (\n        <TicketInput\n          clickable\n          ticket={state}\n          gameDate={state.gameDate}\n          onDateChange={onDateChange}\n          onChange={onChange}\n          onClick={onClickGenerate}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/serviceWorker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://cra.link/PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://cra.link/PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"semantic-ui-css/semantic.min.css\";\n// @ts-ignore\nimport { register } from \"./serviceWorkerRegistration.js\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\nregister();\n"],"sourceRoot":""}